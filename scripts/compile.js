const fs = require('fs');

const Nearley = require('nearley/lib/nearley.js');
const Compile = require('nearley/lib/compile.js');
const Generate = require('nearley/lib/generate.js');
const nearleyGrammar = require('nearley/lib/nearley-language-bootstrapped.js');

const target = './markdown.ne';
const destination = './markdown.js';
const grammar = fs.readFileSync(target, 'utf8');

// try{
// 	const result = Generate(
// 		Compile(
// 			(new Nearley.Parser(
// 					nearleyGrammar.ParserRules,
// 					nearleyGrammar.ParserStart)
// 			)
// 				.feed(grammar)
// 				.results[0]
// 		,{})
// 	);

// 	fs.writeFileSync(destination, result);
// 	console.log(`compiled grammer to ${destination}`);

// }catch(e){
// 	console.log(e);
// }

const genFile = (compiled)=>{
	return `const Nearley = require('nearley');

/** Generated by Nearley **/
${compiled}
/** End **/

const CompiledGrammar = new Nearley.Parser(
		grammar.ParserRules,
		grammar.ParserStart
	).grammar;

module.exports = (input)=>{
	const output = (new Nearley.Parser(CompiledGrammar)).feed(input);
	return output.results[0].join('\\n');
};`
};

try{
	let temp = Generate(
		Compile(
			(new Nearley.Parser(
					nearleyGrammar.ParserRules,
					nearleyGrammar.ParserStart)
			)
				.feed(grammar)
				.results[0]
		,{})
	).split('\n');

	temp = temp.slice(3, temp.length - 7)


	fs.writeFileSync(destination, genFile(temp.join('\n')))
	console.log(`compiled grammer to ${destination}`);

}catch(e){
	console.log(e);
}